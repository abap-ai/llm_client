<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_LLM_TEMPLATE_PARSER</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>Template parser based on limited Jinja2</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <WITH_UNIT_TESTS>X</WITH_UNIT_TESTS>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CMPNAME>ADD_TEMPLATE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Add or replace a template</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Apply filter to value</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>CHECK_CONTROL_STACK_CONDITIONS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check if all conditions in control stack are met</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>EVALUATE_CONDITION_TRUE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Evaluate if condition is true</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>FORMAT_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Format table as string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>GET_TEMPLATE_BY_NAME</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Get template by its name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>HANDLE_CONDITIONAL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Handle conditional control structures</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>HANDLE_ENDFOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Handle endfor control structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>HANDLE_ENDIF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Handle endif control structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>HANDLE_FOR_LOOP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Handle for loop control structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Handle nested for loop tokens</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>PARSE_TOKENS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parse tokens and replace variables with values</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Process loop content with given context</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Process individual token</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>RENDER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Render a template with given context</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Resolve variable path to its value</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>RESOLVE_VARIABLE_REF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Resolve variable path to data reference</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CMPNAME>TOKENIZE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tokenize template string into sequence of tokens</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
   <DESCRIPTIONS_SUB>
    <SEOSUBCOTX>
     <CMPNAME>ADD_TEMPLATE</CMPNAME>
     <SCONAME>CONTENT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Content of the template</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>ADD_TEMPLATE</CMPNAME>
     <SCONAME>NAME</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Name of the template</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>ADD_TEMPLATE</CMPNAME>
     <SCONAME>REPLACE</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Replace template with identical name</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>ADD_TEMPLATE</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If template parsing fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <SCONAME>FILTER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Filter to apply</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <SCONAME>PARAM</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Optional filter parameter</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Filtered value</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <SCONAME>VALUE</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Value to filter</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>APPLY_FILTER</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If filter application fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>CHECK_CONTROL_STACK_CONDITIONS</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>CHECK_CONTROL_STACK_CONDITIONS</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>True if all conditions are met</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>EVALUATE_CONDITION_TRUE</CMPNAME>
     <SCONAME>CONDITION</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Condition to evaluate</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>EVALUATE_CONDITION_TRUE</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>EVALUATE_CONDITION_TRUE</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>True if condition is met</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>EVALUATE_CONDITION_TRUE</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If evaluation fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>FORMAT_TABLE</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Formatted string</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>FORMAT_TABLE</CMPNAME>
     <SCONAME>TABLE</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Table to format</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>FORMAT_TABLE</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If formatting fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>GET_TEMPLATE_BY_NAME</CMPNAME>
     <SCONAME>CONTENT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Template content reference</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>GET_TEMPLATE_BY_NAME</CMPNAME>
     <SCONAME>NAME</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Template name</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>GET_TEMPLATE_BY_NAME</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If template not found</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_CONDITIONAL</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_CONDITIONAL</CMPNAME>
     <SCONAME>CONTROL_CONTENT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure content</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_CONDITIONAL</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_CONDITIONAL</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If handling fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDFOR</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDFOR</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDFOR</CMPNAME>
     <SCONAME>OUTPUT_BUFFER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Output buffer to append to</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDFOR</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If handling fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDIF</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_ENDIF</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If handling fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_FOR_LOOP</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_FOR_LOOP</CMPNAME>
     <SCONAME>CONTROL_CONTENT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Loop content</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_FOR_LOOP</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_FOR_LOOP</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If handling fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <SCONAME>FOR_NESTING_LEVEL</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Current nesting level</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <SCONAME>OUTPUT_BUFFER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Output buffer</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>True if token was handled</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>HANDLE_NESTED_FOR_LOOP</CMPNAME>
     <SCONAME>TOKEN</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Current token</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PARSE_TOKENS</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context for variable resolution</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PARSE_TOKENS</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Resulting parsed string</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PARSE_TOKENS</CMPNAME>
     <SCONAME>TOKENS</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tokens to parse</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PARSE_TOKENS</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If parsing fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>COLLECTION</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Collection to iterate</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>LOOP_VAR</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Loop variable name</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Processed loop content</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>TOKENS</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tokens in loop body</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_LOOP_CONTENT</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If processing fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <SCONAME>OUTPUT_BUFFER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Output buffer to append to</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <SCONAME>TOKEN</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Token to process</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>PROCESS_TOKEN</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If processing fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RENDER</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context for variable resolution</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RENDER</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Rendered template string</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RENDER</CMPNAME>
     <SCONAME>TEMPLATE_NAME</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Name of the template to render</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RENDER</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If rendering fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <SCONAME>CONTROL_STACK</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Current control structure stack</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Resolved variable value as string</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <SCONAME>VARIABLE_PATH</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Path to the variable</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If variable resolution fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE_REF</CMPNAME>
     <SCONAME>CONTEXT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Data context</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE_REF</CMPNAME>
     <SCONAME>RESULT</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Reference to resolved data</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE_REF</CMPNAME>
     <SCONAME>VARIABLE_PATH</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Path to the variable</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>RESOLVE_VARIABLE_REF</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If resolution fails</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>TOKENIZE</CMPNAME>
     <SCONAME>TEMPLATE</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Template string to tokenize</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>TOKENIZE</CMPNAME>
     <SCONAME>TOKENS</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Resulting sequence of tokens</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>TOKENIZE</CMPNAME>
     <SCONAME>ZCX_LLM_TEMPLATE_PARSER</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>If tokenization fails</DESCRIPT>
    </SEOSUBCOTX>
   </DESCRIPTIONS_SUB>
  </asx:values>
 </asx:abap>
</abapGit>
